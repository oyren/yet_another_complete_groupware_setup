global
	log 127.0.0.1	local0
	log 127.0.0.1	local1 notice
	chroot /var/lib/haproxy
	maxconn 4096
	daemon

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/

	ssl-default-bind-options no-sslv3 no-tlsv10
	ssl-default-bind-ciphers AES256+EECDH:AES256+EDH:AES128+EECDH:AES128+EDH
	ssl-default-server-options no-sslv3 no-tlsv10
	ssl-default-server-ciphers AES256+EECDH:AES256+EDH:AES128+EECDH:AES128+EDH

	tune.ssl.default-dh-param 4096

defaults
	log	global
	mode	http # protocol analyzer option
	option  contstats # Enable continuous traffic statistics updates
	option  redispatch # Try another server in case of connection failure
	option	httplog
	option	dontlognull # Do not log connections with no requests
	option	dontlog-normal
	option  forwardfor
	option  http-server-close
	retries 3 # Try to connect up to 3 times in case of failure
	maxconn 2000
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /usr/local/etc/haproxy/errors/400.http
	errorfile 403 /usr/local/etc/haproxy/errors/403.http
	errorfile 408 /usr/local/etc/haproxy/errors/408.http
	errorfile 500 /usr/local/etc/haproxy/errors/500.http
	errorfile 502 /usr/local/etc/haproxy/errors/502.http
	errorfile 503 /usr/local/etc/haproxy/errors/503.http
	errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend frontend
    bind *:443 ssl crt /usr/local/etc/haproxy/example.com.pem
    bind *:80
    acl secure dst_port eq 443
    http-request redirect scheme https if !{ ssl_fc }

    # HSTS (15768000 seconds = 6 months)
    http-response set-header Strict-Transport-Security max-age=15768000;\ includeSubDomains;\ preload
    # Content-Security-Policy as restrictive as currently possible
    http-response set-header Content-Security-Policy "default-src 'none'; script-src http://seafile.com/ https://www.seafile.com/ https://*.xxx.com/ blob: 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' blob:; font-src data: 'self'; connect-src 'self'; style-src 'self' 'unsafe-inline'; frame-src https://*.xxx.com; object-src 'none'; frame-ancestors https://*.xxx.com/; base-uri https://*.xxx.com/ 'self'; media-src 'self';"
    # X-Content-Type-Options
    http-response set-header X-Content-Type-Options nosniff
    # X-Xss-Protection (for Chrome, Safari, IE)
    http-response set-header X-Xss-Protection 1;\ mode=block
    # X-Frame-Options (DENY or SELF)
    http-response set-header X-Frame-Options DENY
    # Delete Server Header
    http-response del-header Server
    # Delete Proxy Header
    http-request del-header Proxy
    # Revealing HTTPS URLs When Navigating Away to HTTP Sites
    http-response set-header Referrer-Policy no-referrer-when-downgrade

    rspirep ^(set-cookie:.*) \1;\ Secure if secure

    #ACL RULES 
    #	<name>		
    acl	is_seafile	hdr_beg(host)	sea.
    acl	is_mailcow	hdr_beg(host)	mx.
    acl is_dyndns	hdr_beg(host)	ns.

    use_backend sea_backend if is_seafile
    use_backend mailcow_backend if is_mailcow
    use_backend dyndns_backend if is_dyndns
    
    default_backend welcome_backend

backend sea_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header Host sea.example.com
    hash-type consistent
    option forwardfor
    cookie SERVERID insert indirect nocache

    #<name> <adress>
    server is_seafile seafile:80 check


backend welcome_backend 
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header Host www.example.com
    hash-type consistent
    option forwardfor
    cookie SERVERID insert indirect nocache

    #<name> <adress>
    server is_welcome example_webpage:80 check

backend mailcow_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header Host mx.example.com
    hash-type consistent
    option forwardfor
    cookie SERVERID insert indirect nocache

    #<name> <adress>
    server is_mailcow nginx-mailcow:8080 check

backend dyndns_backend
    #<name> <adress>
    server is_dyndns ddns:8080 check
